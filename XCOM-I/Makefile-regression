# Licensing:	Declared by the author (Ronald Burkey) to be Public Domain
#		in the U.S., and can be freely distributed or modified in 
#		any desired way whatsoever.
# Filename:	Makefile-regression
# Purpose:	Performs a regression test on the XCOM-I framework.
# Reference:	https://www.ibiblio.org/apollo/Shuttle.html
# Contact:	info@sandroid.org
# Mod history:	2024-03-30 RSB	Wrote
#		2024-06-09 RSB	Split off from the main XCOM-I Makefile.
#
# Regression Tests
# ----------------
#
# Included with the source code for the XCOM-I program itself is a folder
# (Tests/) which contains various XPL and XPL/I sample programs.  A number of
# those sample programs are intended to be tests of XCOM-I itself.  The 
# instructions below explain how to run those tests.
#
#	NOTE: These tests have been tailored for my own system,
#	which runs Linux.  I'm sure they would require adaptation
#	on Windows or Mac OS, because the extra utility programs
#	needed to complete some of the tests are either different
#	or else have somewhat different syntax on those other
#	platforms.
#
# First, `cd` into the folder containing the XCOM-I.py source code.  A copy
# of this Makefile will also be in that folder.  (But this Makefile may be in
# other folders as well, so don't let that confuse you.)
#
# Second, use the command `make -f Makefile-regression`.  Note that the CC, 
# EXTRA, and XEXTRA variables described in Makefile.template can optionally 
# be used as well.
#
# This process should now have created various additional folders, with names
# like bitsizeDemo/, bitsizeDemoCommon/, and so forth, which contain the 
# executables for the XPL test programs it has built, and possibly test
# results for them.  (If folders by that name previously existed, they have 
# been removed.)

SHELL = /bin/bash

ifeq ($(strip $(CC)),)
	CC = gcc
endif

XPLI_APPS = bitsizeDemo bitsizeDemoCommon bitsizeDemoCommonIn
XPL_APPS = Example-6.18.3 Example-6.18.4 Example-6.18.5 Example-6.18.6
XPL_APPS += breakCharactersDemo
XPL_APPS += ANALYZER SKELETON

# Here are the principles behind the tests:
#   1.	Various test programs from the Tests/ folder are built.
#   2.  The test programs are run, and output data collected from them.
#   3.  The output data is either checked directly, or more-usually, compared
#	against other the collected data files or compared to previously-
#	determined-correct "regression" files.
#   4.  The only manual step is occasional determination that the "regression"
#	files are valid.
.PHONY: tests
all: testclean $(XPL_APPS) $(XPLI_APPS)
	@cd bitsizeDemo && \
	./bitsizeDemo >out.txt
	@diff -s -q bitsizeDemo/out.txt Tests/bitsizeDemo.regression
	
	@cd bitsizeDemoCommon && \
	./bitsizeDemoCommon >out.txt && \
	csplit out.txt '%^Address Allocations .*%' \
		       '/^Initial Values .*/' \
		       '%^Assignments .*%' >/dev/null && \
	cat xx00 xx01 | \
	egrep --invert-match '(^Address Allocations |^Assignments |^.PAGE [0-9]|^$$)' > xxxx
	
	@e=Example-6.18.3 && \
	cd $$e && \
	./$$e <../Tests/testdata.txt >out.txt && \
	diff -s -q out.txt ../Tests/$$e.regression
	
	@e=Example-6.18.4 && \
	cd $$e && \
	./$$e <../Tests/testdata.txt >out.txt && \
	diff -s -q out.txt ../Tests/$$e.regression
	
	@Example-6.18.6/Example-6.18.6 | \
	egrep '^[0-9]+' | \
	Example-6.18.5/Example-6.18.5 >Example-6.18.5/out.txt && \
	diff -s -q Example-6.18.5/out.txt Tests/Example-6.18.5-and-6.regression
	
	@e=breakCharactersDemo && \
	cd $$e && \
	./$$e >out.txt && \
	diff -s -q out.txt ../Tests/$$e.regression
	
	@ANALYZER/ANALYZER <Tests/SKELETON.bnf | \
	egrep --invert-match 'ANALYZER VERSION|^TODAY IS|^TIME USED|^TOTAL TIME' \
	>ANALYZER/out.txt && \
	egrep --invert-match 'ANALYZER VERSION|^TODAY IS|^TIME USED|^TOTAL TIME' \
	Tests/ANALYZER-SKELETON.regression >ANALYZER/out.regression && \
	diff -s -q ANALYZER/out.txt ANALYZER/out.regression
	
	@echo ""
	@echo "*********** All regression tests passed! ***********"
	@echo ""

.PHONY: testclean
testclean:
	-@rm -rf $(XPL_APPS) $(XPLI_APPS)

.PHONY: $(XPL_APPS)
$(XPL_APPS): 
	@mkdir $@
	@XCOM-I.py $(XEXTRA) --xpl --keep-unused $(PEXTRA) Tests/$@.xpl
	@$(CC) $(EXTRA) -o $@/$@ $@/*.c -lm

.PHONY: $(XPLI_APPS)
$(XPLI_APPS): 
	@mkdir $@
	@XCOM-I.py $(XEXTRA) --keep-unused $(PEXTRA) Tests/$@.xpl
	@$(CC) $(EXTRA) -o $@/$@ $@/*.c -lm

