# Licensing:	Declared by the author (Ronald Burkey) to be Public Domain
#		in the U.S., and can be freely distributed or modified in 
#		any desired way whatsoever.
# Filename:	Makefile-regression
# Purpose:	Performs a regression test on the XCOM-I framework.
# Reference:	https://www.ibiblio.org/apollo/Shuttle.html
# Contact:	info@sandroid.org
# Mod history:	2024-03-30 RSB	Wrote
#		2024-06-09 RSB	Split off from the main XCOM-I Makefile.
#
# Regression Tests
# ----------------
#
# Included with the source code for the XCOM-I program itself is a folder
# (Tests/) which contains various XPL and XPL/I sample programs.  A number of
# those sample programs are intended to be tests of XCOM-I itself.  The 
# instructions below explain how to run those tests.
#
#	NOTE: These tests have been tailored for my own system,
#	which runs Linux.  I'm sure they would require adaptation
#	on Windows or Mac OS, because the extra utility programs
#	needed to complete some of the tests are either different
#	or else have somewhat different syntax on those other
#	platforms.
#
# First, `cd` into the folder containing the XCOM-I.py source code.  A copy
# of this Makefile will also be in that folder.  (But this Makefile may be in
# other folders as well, so don't let that confuse you.)
#
# Second, use the command `make -f Makefile-regression`.  Note that the CC, 
# EXTRA, and XEXTRA variables described in Makefile.template can optionally 
# be used as well.
#
# This process should now have created various additional folders, with names
# like bitsizeDemo/, bitsizeDemoCommon/, and so forth, which contain the 
# executables for the XPL test programs it has built, and possibly test
# results for them.  (If folders by that name previously existed, they have 
# been removed.)

ifeq ($(strip $(CC)),)
	CC = gcc
endif
ifeq ($(CC), cl)
        OUT = /Fe:
        LIBS =
        EXT = 
        RDYNAMIC = 
        SEP = \\
        NULL = NUL
else ifeq ($(findstring mingw,$(CC)),mingw)
        SHELL = /bin/bash
        OUT = -o
        LIBS = -lm
        EXT = .exe
        RDYNAMIC =
        SEP = /
        NULL = /dev/null
else
        SHELL = /bin/bash
        OUT = -o
        LIBS = -lm
        RDYNAMIC = -rdynamic
        EXT = 
        SEP = /
        NULL = /dev/null
endif

XPLI_APPS = bitsizeDemo bitsizeDemoCommon bitsizeDemoCommonIn
XPL_APPS = Example-6.18.3 Example-6.18.4 Example-6.18.5 Example-6.18.6
XPL_APPS += breakCharactersDemo
XPL_APPS += ANALYZER SKELETON

# Here are the principles behind the tests:
#   1.	Various test programs from the Tests/ folder are built.
#   2.  The test programs are run, and output data collected from them.
#   3.  The output data is either checked directly, or more-usually, compared
#	against other the collected data files or compared to previously-
#	determined-correct "regression" files.
#   4.  The only manual step is occasional determination that the "regression"
#	files are valid.
.PHONY: tests
all: testclean $(XPL_APPS) $(XPLI_APPS)
	@cd bitsizeDemo && \
	.$(SEP)bitsizeDemo$(EXT) >out.txt
	@cd bitsizeDemo && \
	cat out.txt | \
	csplit out.txt '%^Address Allocations .*%' \
		       '/^Initial Values .*/' \
		       '%^Assignments .*%' >$(NULL)
	-@cd bitsizeDemo && \
	egrep --invert-match \
	       '(^Assignments |^.?PAGE [0-9]|^$$)' xx01 > xxxxA
	@diff --strip-trailing-cr -s -q bitsizeDemo$(SEP)out.txt Tests$(SEP)bitsizeDemo.regression
	
	@cd bitsizeDemoCommon && \
	.$(SEP)bitsizeDemoCommon$(EXT) >out.txt && \
	csplit out.txt '%^Address Allocations .*%' \
		       '/^Initial Values .*/' \
		       '%^Assignments .*%' >$(NULL)
	-@cd bitsizeDemoCommon && \
	cat xx00 xx01 | \
	egrep --invert-match \
	       '(^Address Allocations |^Assignments |^.PAGE [0-9]|^$$)' \
	       > xxxx
	-@cd bitsizeDemoCommon && \
	egrep --invert-match \
	       '(^Assignments |^.?PAGE [0-9]|^$$)' xx01 > xxxxA
	@diff --strip-trailing-cr -s -q bitsizeDemo$(SEP)xxxxA bitsizeDemoCommon$(SEP)xxxxA
	
	@cd bitsizeDemoCommonIn && \
	.$(SEP)bitsizeDemoCommonIn$(EXT) --commoni=..$(SEP)bitsizeDemoCommon$(SEP)COMMON.out >out.txt
	@cd bitsizeDemoCommonIn && \
	csplit out.txt '%^COMMON .*%' >$(NULL)
	-@cd bitsizeDemoCommonIn && \
	cat xx00 | \
	egrep --invert-match \
	       '(^COMMON |^.?PAGE [0-9]|^$$)' > xxxx
	@diff --strip-trailing-cr -s -q bitsizeDemoCommon$(SEP)xxxxA bitsizeDemoCommonIn$(SEP)xxxx
	@sed 's/^;.*//' bitsizeDemoCommon$(SEP)COMMON.out >bitsizeDemoCommon$(SEP)COMMONa.out
	@sed 's/^;.*//' bitsizeDemoCommonIn$(SEP)COMMON.out >bitsizeDemoCommonIn$(SEP)COMMONa.out
	@diff --strip-trailing-cr -s -q bitsizeDemoCommon$(SEP)COMMONa.out bitsizeDemoCommonIn$(SEP)COMMONa.out

	@e=Example-6.18.3 && \
	cd $$e && \
	.$(SEP)$$e$(EXT) <..$(SEP)Tests$(SEP)testdata.txt >out.txt && \
	diff --strip-trailing-cr -s -q out.txt ..$(SEP)Tests$(SEP)$$e.regression
	
	@e=Example-6.18.4 && \
	cd $$e && \
	.$(SEP)$$e$(EXT) <..$(SEP)Tests$(SEP)testdata.txt >out.txt && \
	diff --strip-trailing-cr -s -q out.txt ..$(SEP)Tests$(SEP)$$e.regression
	
	@Example-6.18.6$(SEP)Example-6.18.6$(EXT) | \
	egrep '^[0-9]+' | \
	Example-6.18.5$(SEP)Example-6.18.5$(EXT) >Example-6.18.5$(SEP)out.txt && \
	diff --strip-trailing-cr -s -q Example-6.18.5$(SEP)out.txt Tests$(SEP)Example-6.18.5-and-6.regression
	
	@e=breakCharactersDemo && \
	cd $$e && \
	.$(SEP)$$e$(EXT) >out.txt && \
	diff --strip-trailing-cr -s -q out.txt ..$(SEP)Tests$(SEP)$$e.regression
	
	@ANALYZER$(SEP)ANALYZER$(EXT) <Tests$(SEP)SKELETON.bnf | \
	egrep --invert-match 'ANALYZER VERSION|^TODAY IS|^TIME USED|^TOTAL TIME' \
	>ANALYZER$(SEP)out.txt && \
	egrep --invert-match 'ANALYZER VERSION|^TODAY IS|^TIME USED|^TOTAL TIME' \
	Tests$(SEP)ANALYZER-SKELETON.regression >ANALYZER$(SEP)out.regression && \
	diff --strip-trailing-cr -s -q ANALYZER$(SEP)out.txt ANALYZER$(SEP)out.regression
	
	@echo ""
	@echo "*********** All regression tests passed! ***********"
	@echo ""

.PHONY: testclean
testclean:
	-@rm -rf $(XPL_APPS) $(XPLI_APPS)

.PHONY: $(XPL_APPS)
$(XPL_APPS): 
	@mkdir $@
	@XCOM-I.py $(XEXTRA) --xpl --keep-unused $(PEXTRA) Tests$(SEP)$@.xpl
	$(CC) $(EXTRA) $(OUT) $@$(SEP)$@$(EXT) $@$(SEP)*.c $(LIBS) $(RDYNAMIC)

.PHONY: $(XPLI_APPS)
$(XPLI_APPS): 
	@mkdir $@
	@XCOM-I.py $(XEXTRA) --keep-unused $(PEXTRA) Tests$(SEP)$@.xpl
	$(CC) $(EXTRA) $(OUT) $@$(SEP)$@$(EXT) $@$(SEP)*.c $(LIBS) $(RDYNAMIC)

